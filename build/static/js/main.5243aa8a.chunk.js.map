{"version":3,"sources":["assets/images/logo_with_text.png","config.js","components/Standings.js","SeasonRecap.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","config","apiKey","sheetId","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Standings","_ref","leagueData","owners","current","currentWeek","customSorting","michaelGragg","bmullinger","jonnychernek","jcheech30","jdasch1216","bopaskar","brianhavrilla","TeddyBald","kevmullinger","AaronLam","Teechen","courtneychernek","ownersSorted","sort","a","b","userName","winORloss","document","querySelectorAll","winORlossText","textContent","trim","endsWith","classList","add","containers","maxPoints","Infinity","containerWithMaxPoints","container","pointsElement","querySelector","points","parseInt","$","children","addClass","matchups","owner","matchupID","useEffect","_fetchData","_asyncToGenerator","_callee","url","response","data","_context","concat","fetch","json","getElementById","innerText","t0","console","apply","arguments","fetchData","html","addEventListener","previousChamp","statMatchup","previousElementSibling","remove","React","createElement","Fragment","className","map","idx","data-place","ownerID","alt","src","teamAvatar","avatar","teamName","wins","losses","ties","streak","id","roster_id","filter","opponent","oppIdx","waiverOrder","pointsFor","matchupPoints","pointsPossible","pointsAgainst","addDropCount","TradeCount","league_ID","SeasonRecap","_useState","useState","_useState2","_slicedToArray","leagueID","setLeagueID","_useState3","_useState4","setLeagueData","_useState5","_useState6","appStatus","setAppStatus","_getLeagueData","e","apiBase","NFLweek","NFLDataJSON","leagueDataResp","leagueDataJSON","lastWeek","leagueRostersResp","leagueRostersJSON","leagueUsersResp","leagueUsersJSON","combinedTransactions","week","transactionsResp","transactionsJSON","lastWeekMatchupsResp","currentMatchupsResp","lastWeekMatchupsJSON","currentMatchupsJSON","ownersData","_loop","_context2","preventDefault","log","settings","leg","_toConsumableArray","owner_id","moves","total_moves","waiver_position","fpts","fpts_decimal","fpts_against","fpts_against_decimal","ppts","ppts_decimal","pointsPossiblePerc","toFixed","transactionData","transaction","roster_ids","includes","userID","newOwnerData","CurrentMatchupData","user_id","display_name","metadata","matchup_id","team_name","season","size","total_rosters","waiverType","waiver_type","waiverBudget","waiver_budget","_x","getLeagueData","role","aria-label","logo","App","props","Boolean","window","location","hostname","match","routing","Router","Route","exact","path","component","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5243aa8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_with_text.7214a3e6.png\";","const config = {\n  apiKey: \"AIzaSyCXnV6FAQwqA8yLruyYHYTJedzgVKUjB3I\",\n  sheetId: \"1jqhfBw1MPOYS03lwk95Qday7SukePdCI7MjkJ4R-K9U\",\n};\n\nexport default config;\n","import React, { useEffect } from \"react\";\nimport $ from \"jquery\";\nimport config from \"../config\";\n\n// Todos after week 1:\n// change current week to last in stats sidebar\n// Hide custom sorting\n// Bring back sorting by wins and points\n// Bring back season awards\n\nfunction Standings({ leagueData }) {\n  const owners = leagueData.owners;\n  // const lastweek = leagueData.currentWeek - 1;\n  const current = leagueData.currentWeek;\n  // const lastPos = leagueData.size - 1;\n  const avatarUrlBase = \"https://sleepercdn.com/avatars/thumbs/\";\n\n  const customSorting = {\n    michaelGragg: 5,\n    bmullinger: 10,\n    jonnychernek: 2,\n    jcheech30: 3,\n    jdasch1216: 6,\n    bopaskar: 9,\n    brianhavrilla: 4,\n    TeddyBald: 11,\n    kevmullinger: 12,\n    AaronLam: 8,\n    Teechen: 1,\n    courtneychernek: 7,\n  };\n\n  const ownersSorted = owners.slice(0).sort(function (a, b) {\n    return customSorting[a.userName] - customSorting[b.userName];\n  });\n\n  // const ownersSorted = owners.slice(0).sort(function (a, b) {\n  //   return b.wins - a.wins || b.pointsFor - a.pointsFor;\n  // });\n\n  // const ownersSortedPF = owners.slice(0).sort(function (a, b) {\n  //   return a.pointsFor - b.pointsFor;\n  // });\n  // const ownersSortedPA = owners.slice(0).sort(function (a, b) {\n  //   return a.pointsAgainst - b.pointsAgainst;\n  // });\n  // const ownersSortedPPP = owners.slice(0).sort(function (a, b) {\n  //   return a.pointsPossiblePerc - b.pointsPossiblePerc;\n  // });\n  // const highPF = ownersSortedPF[lastPos];\n  // const lowPF = ownersSortedPF[0];\n  // const highPA = ownersSortedPA[lastPos];\n  // const lowPA = ownersSortedPA[0];\n  // const highPPP = ownersSortedPPP[lastPos];\n  // const lowPPP = ownersSortedPPP[0];\n\n  const winORloss = document.querySelectorAll(\".streak\");\n  for (var i = 0; i < winORloss.length; i++) {\n    var winORlossText = winORloss[i].textContent.trim();\n    if (winORlossText.endsWith(\"W\")) {\n      winORloss[i].classList.add(\"wins\");\n    }\n    if (winORlossText.endsWith(\"L\")) {\n      winORloss[i].classList.add(\"losses\");\n    }\n  }\n\n  let containers = document.querySelectorAll(\".container\");\n  let maxPoints = -Infinity;\n  let containerWithMaxPoints = null;\n  containers.forEach((container) => {\n    let pointsElement = container.querySelector(\".matchup-points\");\n    let points = parseInt(pointsElement.textContent);\n    if (points > maxPoints) {\n      maxPoints = points;\n      containerWithMaxPoints = container;\n    }\n  });\n  if (containerWithMaxPoints) {\n    containerWithMaxPoints.classList.add(\"weekly-winner\");\n    $(\".weekly-winner\").children(\".ranking\").addClass(\"first\");\n    $(\".weekly-winner\").children(\".avatar\").addClass(\"weekly-winner-circle\");\n  }\n\n  const matchups = {};\n\n  // Group teams by matchupID\n  ownersSorted.forEach((owner) => {\n    const matchupID = owner.matchupID;\n    if (!matchups[matchupID]) {\n      matchups[matchupID] = [];\n    }\n    matchups[matchupID].push(owner);\n  });\n\n  useEffect(() => {\n    const apiKey = config.apiKey;\n    const sheetId = config.sheetId;\n    const range = \"Sheet1!B2:C13\";\n\n    async function fetchData() {\n      const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?key=${apiKey}`;\n\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        //   0 -- michaelGragg\n        //   1 -- bmullinger\n        //   2 -- jonnychernek\n        //   3 -- jcheech30\n        //   4 -- jdasch1216\n        //   5 -- bopaskar\n        //   6 -- brianhavrilla\n        //   7 -- TeddyBald\n        //   8 -- kevmullinger\n        //   9 -- AaronLam\n        //  10 -- Teechen\n        //  11 -- courtneyressa\n        document.getElementById(\"teamBlurb-10\").innerText =\n          data.values[0][0] || \"\";\n        document.getElementById(\"winningWeeks-10\").innerText =\n          data.values[0][1] || \"\";\n        document.getElementById(\"teamBlurb-7\").innerText =\n          data.values[1][0] || \"\";\n        document.getElementById(\"winningWeeks-7\").innerText =\n          data.values[1][1] || \"\";\n        document.getElementById(\"teamBlurb-2\").innerText =\n          data.values[2][0] || \"\";\n        document.getElementById(\"winningWeeks-2\").innerText =\n          data.values[2][1] || \"\";\n        document.getElementById(\"teamBlurb-6\").innerText =\n          data.values[3][0] || \"\";\n        document.getElementById(\"winningWeeks-6\").innerText =\n          data.values[3][1] || \"\";\n        document.getElementById(\"teamBlurb-12\").innerText =\n          data.values[4][0] || \"\";\n        document.getElementById(\"winningWeeks-12\").innerText =\n          data.values[4][1] || \"\";\n        document.getElementById(\"teamBlurb-11\").innerText =\n          data.values[5][0] || \"\";\n        document.getElementById(\"winningWeeks-11\").innerText =\n          data.values[5][1] || \"\";\n        document.getElementById(\"teamBlurb-3\").innerText =\n          data.values[6][0] || \"\";\n        document.getElementById(\"winningWeeks-3\").innerText =\n          data.values[6][1] || \"\";\n        document.getElementById(\"teamBlurb-5\").innerText =\n          data.values[7][0] || \"\";\n        document.getElementById(\"winningWeeks-5\").innerText =\n          data.values[7][1] || \"\";\n        document.getElementById(\"teamBlurb-4\").innerText =\n          data.values[8][0] || \"\";\n        document.getElementById(\"winningWeeks-4\").innerText =\n          data.values[8][1] || \"\";\n        document.getElementById(\"teamBlurb-9\").innerText =\n          data.values[9][0] || \"\";\n        document.getElementById(\"winningWeeks-9\").innerText =\n          data.values[9][1] || \"\";\n        document.getElementById(\"teamBlurb-1\").innerText =\n          data.values[10][0] || \"\";\n        document.getElementById(\"winningWeeks-1\").innerText =\n          data.values[10][1] || \"\";\n        document.getElementById(\"teamBlurb-8\").innerText =\n          data.values[11][0] || \"\";\n        document.getElementById(\"winningWeeks-8\").innerText =\n          data.values[11][1] || \"\";\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n    fetchData();\n\n    $(\"#previousChamp-3\").html(\"2015, 2016, 2020 Champ\");\n    $(\"#previousChamp-2\").html(\"2017 Champ\");\n    $(\"#previousChamp-10\").html(\"2018 Champ\");\n    $(\"#previousChamp-9\").html(\"2019 Champ\");\n    $(\"#previousChamp-4\").html(\"2021 Champ\");\n    $(\"#previousChamp-11\").html(\"2022 Champ\");\n    $(\"#previousChamp-11\").addClass(\"current-champ\");\n\n    // function checkEmpty() {\n    //   var targetText = $(\".previous-champ\").text().trim();\n    //   if (targetText === \"\") {\n    //     $(\".stat-matchup\").addClass(\"no-champ\");\n    //   } else {\n    //     $(\".stat-matchup\").removeClass(\"no-champ\");\n    //   }\n    // }\n    // var timeoutId;\n\n    // $(\".previous-champ\").on(\"input\", function () {\n    //   clearTimeout(timeoutId);\n    //   timeoutId = setTimeout(checkEmpty, 3000); // Delay of 500 milliseconds\n    // });\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      const previousChamp = document.querySelector(\".previous-champ\");\n      const statMatchup = previousChamp.previousElementSibling;\n\n      if (previousChamp.textContent.trim() === \"\") {\n        statMatchup.classList.add(\"empty-previous-champ\");\n      } else {\n        statMatchup.classList.remove(\"empty-previous-champ\");\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      {/* <div id=\"awards\">\n        <h2>Season Awards</h2>\n        <div className=\"awards\">\n          <div className=\"box weekly-winner\">\n            <h3>\n              <span className=\"emoji\" role=\"img\" aria-label=\"\">\n                &#128176;\n              </span>{\" \"}\n              Most Points{\" \"}\n              <span className=\"username good\"> @{highPF.userName}</span>\n            </h3>\n\n            <div className=\"owner-block\">\n              <span className=\"stat\">{highPF.pointsFor} points</span>\n            </div>\n          </div>\n\n          <div className=\"box\">\n            <h3>\n              <span className=\"emoji\" role=\"img\" aria-label=\"\">\n                &#128169;\n              </span>\n              Least Points{\" \"}\n              <span className=\"username bad\">@{lowPF.userName}</span>\n            </h3>\n            <div className=\"owner-block\">\n              <span className=\"stat\">{lowPF.pointsFor} points</span>\n            </div>\n          </div>\n\n          <div className=\"box\">\n            <h3>\n              <span className=\"emoji\" role=\"img\" aria-label=\"\">\n                &#127808;\n              </span>\n              Best Luck <span className=\"username good\">@{lowPA.userName}</span>\n            </h3>\n            <div className=\"desc\">(least points against)</div>\n\n            <div className=\"owner-block\">\n              <span className=\"stat\">{lowPA.pointsAgainst} points</span>\n            </div>\n          </div>\n\n          <div className=\"box\">\n            <h3>\n              <span className=\"emoji\" role=\"img\" aria-label=\"\">\n                &#129324;\n              </span>\n              Worst Luck{\" \"}\n              <span className=\"username bad\">@{highPA.userName}</span>\n            </h3>\n            <div className=\"desc\">(most points against)</div>\n            <div className=\"owner-block\">\n              <span className=\"stat\">{highPA.pointsAgainst} points</span>\n            </div>\n          </div>\n\n          <div className=\"box\">\n            <h3>\n              <span className=\"emoji\" role=\"img\" aria-label=\"\">\n                &#128293;\n              </span>\n              Best Manager{\" \"}\n              <span className=\"username good\"> @{highPPP.userName}</span>\n            </h3>\n            <div className=\"desc\">\n              (highest percentage of possible points scored)\n            </div>\n            <div className=\"owner-block\">\n              <span className=\"stat\">{highPPP.pointsPossiblePerc}%</span>\n            </div>\n          </div>\n\n          <div className=\"box\">\n            <h3>\n              <span className=\"emoji\" role=\"img\" aria-label=\"\">\n                &#129300;\n              </span>\n              Worst Manager\n              <span className=\"username bad\"> @{lowPPP.userName}</span>\n            </h3>\n            <div className=\"desc\">\n              (lowest percentage of possible points scored)\n            </div>\n            <div className=\"owner-block\">\n              <span className=\"stat\">{lowPPP.pointsPossiblePerc}%</span>\n            </div>\n          </div>\n        </div>\n      </div> */}\n      <div className=\"standings\">\n        {ownersSorted.map((owner, idx) => (\n          <>\n            <li\n              data-place={idx + 1}\n              key={owner.ownerID}\n              className={`container-${idx}  container`}\n            >\n              <span className=\"ranking\"> {idx + 1}</span>\n              <img\n                alt=\"team avatar\"\n                src={owner.teamAvatar || avatarUrlBase + owner.avatar}\n                className=\"avatar\"\n              />\n              <div className=\"name-desc\">\n                <h3>\n                  {owner.teamName} ({owner.wins}&#8209;{owner.losses}\n                  {owner.ties ? \"-\" + owner.ties : \"\"})\n                  <span className=\"streak\"> {owner.streak} </span>\n                </h3>\n                <span className=\"owner-name\">@{owner.userName}</span>\n                <p\n                  id={`teamBlurb-${owner.roster_id}`}\n                  className=\"team-blurb\"\n                ></p>\n                <span\n                  id={`winningWeeks-${owner.roster_id}`}\n                  className=\"winning-weeks\"\n                ></span>{\" \"}\n              </div>\n              <div className=\"matchup\">\n                {\" \"}\n                {matchups[owner.matchupID]\n                  .filter((opponent) => opponent !== owner)\n                  .map((opponent, oppIdx) => (\n                    <span key={oppIdx}>\n                      Week {current} Opponent:{\" \"}\n                      <span className=\"team-name\">{opponent.teamName}</span>{\" \"}\n                      <span className=\"priority\">\n                        {\" \"}\n                        Waiver Priority: {owner.waiverOrder}{\" \"}\n                      </span>\n                    </span>\n                  ))}\n              </div>\n              <div className=\"stats\">\n                <h4>Team Stats</h4>\n                <p className=\"stats-points\">\n                  <span>Total points: {owner.pointsFor}</span>\n                  <span>\n                    Week\n                    {/* {lastweek}  */} {current} Points:{\" \"}\n                    <span className=\"matchup-points\">\n                      {\" \"}\n                      {owner.matchupPoints}\n                    </span>\n                  </span>\n                  <span> Possible Points: {owner.pointsPossible}</span>\n                  <span> Points Against: {owner.pointsAgainst}</span>\n                </p>\n                <p className=\"stats-other\">\n                  <span className=\"hide\">Adds/Drops: {owner.addDropCount}</span>\n                  <span className=\"hide\">Trades: {owner.TradeCount}</span>\n                  <span\n                    className={`stat-matchup-${owner.roster_id}  stat-matchup`}\n                  >\n                    {matchups[owner.matchupID]\n                      .filter((opponent) => opponent !== owner)\n                      .map((opponent, oppIdx) => (\n                        <span key={oppIdx}>\n                          Week {current} Opponent:{\" \"}\n                          <span className=\"team-name\">{opponent.teamName}</span>{\" \"}\n                          <span className=\"priority\">\n                            {\" \"}\n                            Waiver Priority: {owner.waiverOrder}{\" \"}\n                          </span>\n                        </span>\n                      ))}\n                  </span>\n                  <span\n                    id={`previousChamp-${owner.roster_id}`}\n                    className=\"previous-champ\"\n                  ></span>\n                </p>\n              </div>\n            </li>\n          </>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Standings;\n","import React, { useState } from \"react\";\nimport Standings from \"./components/Standings\";\nimport logo from \"./assets/images/logo_with_text.png\";\n\n// Todo after Week 1\n// show streak\n// show matchupPoints\n\n// 2022\n// const league_ID = \"859880880154480640\";\n\n// 2023\nconst league_ID = \"957497971501780992\";\n\nfunction SeasonRecap() {\n  const [leagueID, setLeagueID] = useState(\"\");\n  const [leagueData, setLeagueData] = useState(\"\");\n  const [appStatus, setAppStatus] = useState(\"loading\");\n\n  async function getLeagueData(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    const apiBase = \"https://api.sleeper.app/v1/\";\n\n    let NFLweek = await fetch(apiBase + \"state/nfl\");\n\n    const NFLDataJSON = await NFLweek.json();\n    console.log(NFLDataJSON);\n\n    // get league data\n    let leagueDataResp = await fetch(apiBase + \"league/\" + league_ID);\n    const leagueDataJSON = await leagueDataResp.json();\n\n    if (leagueDataJSON) {\n      console.log(leagueDataJSON);\n\n      const lastWeek = leagueDataJSON.settings.leg - 1;\n      const currentWeek = leagueDataJSON.settings.leg;\n\n      // get rosters data\n      let leagueRostersResp = await fetch(\n        apiBase + \"league/\" + league_ID + \"/rosters\"\n      );\n      const leagueRostersJSON = await leagueRostersResp.json();\n      console.log(\"league rosters\");\n      console.log(leagueRostersJSON);\n\n      // get users data\n      let leagueUsersResp = await fetch(\n        apiBase + \"league/\" + league_ID + \"/users\"\n      );\n      const leagueUsersJSON = await leagueUsersResp.json();\n      console.log(\"league users\");\n      console.log(leagueUsersJSON);\n\n      // Fetch transactions data for each week and combine them\n      const combinedTransactions = [];\n\n      for (let week = 1; week <= currentWeek; week++) {\n        const transactionsResp = await fetch(\n          apiBase + \"league/\" + league_ID + \"/transactions/\" + week\n        );\n        const transactionsJSON = await transactionsResp.json();\n        combinedTransactions.push(...transactionsJSON);\n        console.log(\"league transactions\");\n        console.log(transactionsJSON);\n      }\n\n      // get draft data\n      // let leagueDraftResp = await fetch(apiBase + \"draft/859880880934612992\");\n      // const leagueDraftJSON = await leagueDraftResp.json();\n      // console.log(\"league draft\");\n      // console.log(leagueDraftJSON);\n\n      // get matchup data\n\n      // console.log(leagueDataJSON.settings.leg);\n\n      let lastWeekMatchupsResp = await fetch(\n        apiBase + \"league/\" + league_ID + \"/matchups/\" + lastWeek\n      );\n\n      let currentMatchupsResp = await fetch(\n        apiBase + \"league/\" + league_ID + \"/matchups/\" + currentWeek\n      );\n\n      const lastWeekMatchupsJSON = await lastWeekMatchupsResp.json();\n      console.log(\"last week matchups\");\n      console.log(lastWeekMatchupsJSON);\n\n      const currentMatchupsJSON = await currentMatchupsResp.json();\n      console.log(\"current matchups\");\n      console.log(currentMatchupsJSON);\n\n      // pull out data we want from rosters -- 2\n      let ownersData = [];\n      leagueRostersJSON.forEach((owner, idx) => {\n        ownersData.push({\n          ownerID: owner.owner_id,\n          // streak: owner.metadata.streak,\n          wins: owner.settings.wins,\n          losses: owner.settings.losses,\n          ties: owner.settings.ties,\n          roster_id: owner.roster_id,\n          moves: owner.settings.total_moves,\n          waiverOrder: owner.settings.waiver_position,\n          pointsFor: owner.settings.fpts + \".\" + owner.settings.fpts_decimal,\n          pointsAgainst:\n            owner.settings.fpts_against +\n            \".\" +\n            owner.settings.fpts_against_decimal,\n          pointsPossible:\n            owner.settings.ppts + \".\" + owner.settings.ppts_decimal,\n          pointsPossiblePerc: (\n            (parseInt(owner.settings.fpts + \".\" + owner.settings.fpts_decimal) /\n              parseInt(\n                owner.settings.ppts + \".\" + owner.settings.ppts_decimal\n              )) *\n            100\n          ).toFixed(2),\n        });\n\n        const transactionData = combinedTransactions.filter((transaction) => {\n          return transaction.roster_ids.includes(ownersData[idx].roster_id);\n        });\n        let addDropCount = 0;\n        let TradeCount = 0;\n        transactionData.forEach((transaction) => {\n          if (transaction.type === \"free_agent\") {\n            addDropCount++;\n          } else if (transaction.type === \"trade\") {\n            TradeCount++;\n          }\n        });\n        ownersData[idx].addDropCount = addDropCount;\n        ownersData[idx].TradeCount = TradeCount;\n      });\n\n      // get additional user data that isn't provided in rosters endpoint\n      for (var i = 0; i < ownersData.length; i++) {\n        const userID = ownersData[i].ownerID;\n\n        // search for corresponding owner\n        const newOwnerData = leagueUsersJSON.filter((obj) => {\n          return obj.user_id === userID;\n        });\n\n        // const standingsData = lastWeekMatchupsJSON.filter((obj) => {\n        //   return obj.roster_id === ownersData[i].roster_id;\n        // });\n\n        const CurrentMatchupData = currentMatchupsJSON.filter((obj) => {\n          return obj.roster_id === ownersData[i].roster_id;\n        });\n\n        const userName = newOwnerData[0].display_name;\n        const teamAvatar = newOwnerData[0].metadata.avatar;\n        // const matchupPoints = standingsData[0].points;\n        const matchupID = CurrentMatchupData[0].matchup_id;\n        const teamName = newOwnerData[0].metadata.team_name || userName;\n\n        ownersData[i].avatar = newOwnerData[0].avatar;\n        ownersData[i].teamAvatar = teamAvatar;\n        ownersData[i].userName = userName;\n        ownersData[i].teamName = teamName;\n        // ownersData[i].matchupPoints = matchupPoints;\n        ownersData[i].matchupID = matchupID;\n      }\n\n      setLeagueData({\n        name: leagueDataJSON.name,\n        season: leagueDataJSON.season,\n        avatar: leagueDataJSON.avatar,\n        size: leagueDataJSON.total_rosters,\n        currentWeek: leagueDataJSON.settings.leg,\n        waiverType: leagueDataJSON.settings.waiver_type,\n        waiverBudget: leagueDataJSON.settings.waiver_budget,\n        owners: ownersData,\n      });\n\n      setAppStatus(\"loaded\");\n    } else {\n      setAppStatus(\"failed\");\n    }\n  }\n\n  if (league_ID && !leagueID) {\n    setLeagueID(league_ID);\n    getLeagueData(null, league_ID);\n  }\n\n  return (\n    <>\n      {appStatus === \"loading\" ? (\n        <div id=\"loading\" className=\"full-screen\">\n          <div className=\"inner\">\n            <div className=\"loader\"></div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {appStatus === \"failed\" ? (\n        <div id=\"failed\" className=\"full-screen\">\n          <div className=\"inner\">\n            <span role=\"img\" aria-label=\"\" className=\"emoji\">\n              &#129300;\n            </span>\n            <p>League ID not working!</p>\n\n            <p>\n              Your league ID: <span className=\"highlight\">{leagueID}</span>\n            </p>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <header>\n        <div className=\"inner\">\n          <div className=\"top\">\n            <div className=\"site-title\">\n              <img alt=\"logo\" className=\"sleeper-logo\" src={logo} />\n              <h1>{leagueData.season} Power Rankings</h1>\n              <h3>\n                {\" \"}\n                {leagueData.name} - Week {leagueData.currentWeek}\n              </h3>\n              <p></p>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"row\">\n          <div className=\"inner\">\n            {leagueData ? (\n              <>\n                <Standings leagueData={leagueData} />\n              </>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default SeasonRecap;\n","import React from \"react\";\nimport SeasonRecap from \"./SeasonRecap\";\n\nfunction App(props) {\n  return (\n    <>\n      <SeasonRecap />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport SeasonRecap from \"./SeasonRecap\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/:id\" component={SeasonRecap} />\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}